name: kitkat

on:
  schedule:
    - cron: 0 0 * * *
  workflow_dispatch:
    inputs:
      rebuild:
        description: '忽略构建记录以重新构建'
        required: false
        type: boolean
      donotpublish:
        description: '构建后不提交发布新版'
        required: false
        type: boolean
      testOption:
        description: 'arm64支持，不支持ijk解码'
        required: false
        type: boolean

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - userName: xisohi
            repoName: XHTV
            branchName: kitkat

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Check New Commit
        id: check_commit
        run: |
          upStream="https://github.com/${{ matrix.userName }}/${{ matrix.repoName }}"
          echo "upStream=$upStream" >> $GITHUB_ENV
          commit=$(curl -sL "$upStream/commits/${{ matrix.branchName }}" | grep -o "/${{ matrix.userName }}/${{ matrix.repoName }}/commit/[a-z0-9]\+" | head -1 | cut -d\/ -f5)
          if ! grep -q "$commit" README.md || [ "${{ inputs.rebuild }}" == "true" ]; then
            echo "commit=$commit" >> $GITHUB_ENV
            echo "commitS=${commit:0:7}" >> $GITHUB_ENV
          fi

      - name: Checkout Source Code
        if: ${{ env.commit }}
        run: |
          git clone "${{ env.upStream }}" TVBoxOSC
          cd TVBoxOSC
          git checkout "${{ env.commit }}"
          echo "tag=$(git log --date=format:'%y%m%d%H%M' --pretty=format:%cd "${{ env.commitS }}" -1)" >> $GITHUB_ENV

      - name: Clone Media Repository
        if: ${{ env.commit }}
        run: |
          git clone --branch 1.2.0 https://github.com/androidx/media.git ../media

      - name: Modify settings.gradle
        if: ${{ env.commit }}
        working-directory: TVBoxOSC
        run: |
          sed -i 's|apply from: file("/media/core_settings.gradle")|apply from: file("../media/core_settings.gradle")|' settings.gradle

      - name: Extra Modify
        if: ${{ env.commit }}
        working-directory: TVBoxOSC
        run: |
          if [[ "${{ matrix.userName }}" == "xisohi" ]]; then
            sed -i 's/TeamNewPipe/teamnewpipe/g' app/build.gradle
          fi

      - name: Compress Source Code
        if: ${{ env.commit }}
        working-directory: TVBoxOSC
        run: |
          tar -cJf "source-${{ env.commitS }}.tar.xz" --exclude=.git --exclude=.github *

      - name: Option For Test
        if: ${{ inputs.testOption }}
        working-directory: TVBoxOSC
        run: |
          sed -i "/armeabi-v7a[\'\"]\$/s#\$#, 'arm64-v8a'#" app/build.gradle
          sed -i "/armeabi-v7a[\'\"]\$/s#\$#, 'arm64-v8a'#" player/build.gradle

      - name: Set up JDK and Gradle
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Build With Gradle
        if: ${{ env.commit }}
        working-directory: TVBoxOSC
        run: |
          chmod +x gradlew
          ./gradlew assemblerelease --build-cache --parallel --daemon --warning-mode all

      - name: Prepare App
        if: ${{ env.commit }}
        working-directory: TVBoxOSC
        run: |
          rm -rf apk/
          mkdir -p apk/
          find "$HOME" -type d -iname "release" -print0 | while IFS= read -r -d '' dir; do
            find "$dir" -type f -name "*.apk" -exec sh -c 'cp "$1" "apk/${1##*/}"' sh {} \;
          done

      - name: Release Note
        if: ${{ env.commit }}
        working-directory: TVBoxOSC
        run: |
          lastCommit=$(grep "${{ matrix.userName }}/${{ matrix.repoName }}" "${{ github.workspace }}/README.md" | grep -o '[a-z0-9]\{40\}')
          export LESSCHARSET=utf-8
          echo -e "Credit: [${{ matrix.userName }}](${{ env.upStream }})\nCommit: ${{ env.commit }}\nChangelog:" > "apk/${{ matrix.repoName }}-Release.log"
          if [ "${{ env.commit }}" == "${lastCommit}" ]; then
            git log --pretty=format:%B "${{ env.commitS }}" -1 | sed -e "s# \{2,\}#\n#g" -e "/^Merge \(pull\|branch\|remote\)/d" -e '/^$/d' | cat -n | sort -k2,2 -k1,1n | uniq -f1 | sort -k1,1n | cut -f2- >> "apk/${{ matrix.repoName }}-Release.log"
          else
            git log --pretty=format:%B "${{ env.commitS }}...${lastCommit:0:7}" | sed -e "s# \{2,\}#\n#g" -e "/^Merge \(pull\|branch\|remote\)/d" -e '/^$/d' | cat -n | sort -k2,2 -k1,1n | uniq -f1 | sort -k1,1n | cut -f2- >> "apk/${{ matrix.repoName }}-Release.log"
          fi

      - name: Build Upgrade content
        if: ${{ env.commit }}
        working-directory: TVBoxOSC
        run: |
          echo "VersionCode=$(grep -oP 'versionCode \K\d+' app/build.gradle)" >> $GITHUB_ENV
          echo "desc=$(awk 'BEGIN{ORS="\\\\n"}{print NR ": " $0}' "apk/${{ matrix.repoName }}-Release.log")" >> $GITHUB_ENV

      - name: Upload App To Artifact
        uses: actions/upload-artifact@v3
        if: ${{ env.commit }}
        with:
          name: ${{ matrix.userName }}-${{ matrix.repoName }}
          path: |
            TVBoxOSC/apk/*

      - name: Whether Or Not to Publish
        if: ${{ inputs.donotpublish && env.commit }}
        run: |
          echo "commit=" >> $GITHUB_ENV

      - name: Release and Upload Assets
        uses: ncipollo/release-action@main
        if: ${{ env.commit }}
        with:
          name: ${{ matrix.repoName }}
          tag: ${{ matrix.repoName }}
          bodyFile: "TVBoxOSC/apk/${{ matrix.repoName }}-Release.log"
          allowUpdates: true
          removeArtifacts: true
          artifacts: |
            TVBoxOSC/apk/*.apk
            TVBoxOSC/source-${{ env.commitS }}.*

      - name: Push to master
        if: ${{ env.commit }}
        run: |
          rm -rf TVBoxOSC
          sed -i '/url =/d' ./.git/config
          git config --local user.name "github-actions[bot]"
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git remote set-url --add origin "https://${{ github.actor }}:${{ secrets.GIT_TOKEN }}@github.com/${{ github.repository }}"
          git pull --rebase
          sed -i "/${{ matrix.userName }}\/${{ matrix.repoName }}/s#Updated: [a-zA-Z0-9]*#Updated: ${{ env.commit }}#" README.md
          sed -i 's/"code": "[a-zA-Z0-9]*"/"code": "${{ env.VersionCode }}"/' "${{ matrix.repoName }}update.json"
          sed -i 's/"name": "[a-zA-Z0-9]*"/"name": "${{ env.VersionCode }}"/' "${{ matrix.repoName }}update.json"
          sed -i 's|"desc": ".*"|"desc": "${{ env.desc }}"|g' "${{ matrix.repoName }}update.json"
          sed -i "s/update at .*/update at $(date '+%Y-%m-%d %H:%M:%S')/" README.md
          git add --all
          git commit -m "${{ env.commit }}"
          git push -u -f origin master
